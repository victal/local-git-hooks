#!/usr/bin/env bash
# Git global hook to ignore pre-commit hooks if we have not added any file to the staging area
# Useful since some hooks might be time-consuming (e.g. running lint in a big project)
# With thanks to https://stackoverflow.com/a/53722351

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

MODIFIED_FILES=$(git diff --name-only --staged | wc -l)

if [ "${MODIFIED_FILES}" -eq 0 ]; then
    echo 'No files have been staged for commit, aborting commit without running local hooks'
    exit 0
fi

# Run pre-commit hook from the git repository, if present
if [ -x ./.git/hooks/pre-commit ]; then
    ./.git/hooks/pre-commit "$@"
    HOOK_RETCODE=$?
    if [ $HOOK_RETCODE -ne 0 ]; then
       exit $HOOK_RETCODE
    fi
fi

# Run extra installed hooks
for HOOK in "$SCRIPT_DIR"/pre-commit.d/*.sh
do
    "$HOOK"
    HOOK_RETCODE=$?
    if [ $HOOK_RETCODE -ne 0 ]; then
       exit $HOOK_RETCODE
    fi
done

# vim:set et sw=4 ts=8 ft=sh:
